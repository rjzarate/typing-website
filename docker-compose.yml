services:
    client-vite:
        image: client-vite:dev
        build:
            context: client-vite/
        init: true
        volumes:
            - type: bind
              source: client-vite/
              target: /usr/src/app/
            - type: volume
              source: client_vite_node_modules
              target: /usr/src/app/node_modules
        networks:
            - frontend
        ports:
            - 8080:5173
    api-django:
        image: api-django:dev
        build:
            context: api-django/
        init: true
        volumes:
            - type: bind
              source: api-django/
              target: /app/
        depends_on:
            database:
                condition: service_healthy
        networks:
            - frontend
            - backend
        ports:
            - 8000:8000
    database:
        image: postgres:15.1-alpine
        volumes:
            - database_data:/var/lib/postgresql/data
            - ./postgres/scripts:/docker-entrypoint-initdb.d
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DB=test
        networks:
            - backend
        ports:
            - 5432:5432
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 5s
            timeout: 5s
            retries: 5
networks:
    frontend:
    backend:
volumes:
    database_data:
    client_vite_node_modules:
